---
import { supabase } from "@lib/supabase";
import GalleryCard from "@components/GalleryCard.astro";

interface Props {
  currentCategory?: string;
}

const { currentCategory } = Astro.props;

let categories: any[] = [];
try {
  const { data, error } = await supabase
    .from("images")
    .select("category, image_url, created_at")
    .order("category", { ascending: true })
    .order("created_at", { ascending: true });
  if (error) throw error;

  // カテゴリーごとの最初の画像のみ取得
  const uniqueCategories = new Map();
  data.forEach((item) => {
    if (!uniqueCategories.has(item.category)) {
      uniqueCategories.set(item.category, item.image_url);
    }
  });

  categories = Array.from(uniqueCategories.entries()).map(
    ([category, image_url]) => ({
      category,
      image_url,
    })
  );
} catch (error) {
  // console.error("Error fetching categories:", error.message);
}
---

<div class="galleries-wrapper">
  <h2>他のギャラリーも見る</h2>
  <div class="galleries">
    {
      categories
        .filter((category) => category.category !== currentCategory)
        .map((category) => (
          <GalleryCard
            title={category.category}
            link={`/Gallery/${category.category}`}
            image={category.image_url}
          />
        ))
    }
  </div>
</div>

<style>
.galleries-wrapper {
  width: 100vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-self: center;
}
  h2 {
    font-size: 1.5rem;
    margin: 1rem 0;
    padding: 1.5rem 2rem;
    border-bottom: 1px solid #000;
  }
  .galleries {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10px;
  padding: 10px;
  width: fit-content;
  margin: 0 auto;
  justify-items: center;
  align-items: center;
}

@media (max-width: 830px) {
  .galleries {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 620px) {
  .galleries {
    grid-template-columns: 1fr;
  }
}

</style>
