---
import GalleryLayout from "../../../layouts/GalleryLayout.astro";
import { supabase } from "../../../lib/supabase";
import Button from "../../../components/Button.astro";

export async function getStaticPaths() {
  const { data, error } = await supabase.from("images").select("id, category");

  if (error) {
    console.error("Error fetching paths:", error.message);
    return [];
  }

  const paths = data.map((item) => ({
    params: {
      category: item.category,
      id: item.id,
    },
  }));

  return paths;
}

// URLパラメータからカテゴリとIDを取得
const { category, id } = Astro.params;
let item = {};
let previous = null;
let next = null;

try {
  const { data, error } = await supabase
    .from("images")
    .select("*")
    .eq("id", id)
    .single(); // 現在の画像データを取得

  if (error) throw error;
  item = data;

  // 基準となる`created_at`を使用して前後を取得
  const { created_at } = item;

  // 前の画像
  const { data: previousData } = await supabase
    .from("images")
    .select("id, title")
    .eq("category", category)
    .lt("created_at", created_at) // 現在の画像の作成日時より前
    .order("created_at", { ascending: false }) // 降順で並べて1つ取得
    .limit(1);

  // 次の画像
  const { data: nextData } = await supabase
    .from("images")
    .select("id, title")
    .eq("category", category)
    .gt("created_at", created_at) // 現在の画像の作成日時より後
    .order("created_at", { ascending: true }) // 昇順で並べて1つ取得
    .limit(1);

  if (previousData?.length) previous = previousData[0];
  if (nextData?.length) next = nextData[0];
} catch (error) {
  console.error("Error fetching image details:", error.message);
}
---

<GalleryLayout title={category}>
  <main>
    <div class="contents">
      <div class="image-slider">
        <div class={`arrow ${previous ? "" : "hidden"}`}>
          {
            previous && (
              <a href={`/Gallery/${category}/${previous.id}`}>
                <img src="/arrow_left.png" alt="Previous" />
              </a>
            )
          }
        </div>
        <img src={item.image_url} alt={item.title} class="image" />
        <div class={`arrow ${next ? "" : "hidden"}`}>
          {
            next && (
              <a href={`/Gallery/${category}/${next.id}`}>
                <img src="/arrow_right.png" alt="Next" />
              </a>
            )
          }
        </div>
      </div>
      <div class="description">
        <h2 class={`title ${item.title ? "" : "hidden"}`}>{item.title}</h2>
        <p class={`${item.description ? "" : "hidden"}`}>{item.description}</p>
      </div>

      <Button link={category} text="に戻る" />
    </div>
  </main>
</GalleryLayout>

<style>
  .contents {
    margin-top: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    .image-slider {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 4rem;
      height: 80vh;
      flex-grow: 1; /* 中央の画像が残りのスペースを使用 */
      text-align: center;

      .arrow {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;

        .hidden {
          visibility: hidden; /* 要素は非表示だが、スペースを確保 */
        }

        img {
          width: 100%; /* 矢印アイコンのサイズ */
          height: auto;
        }
      }
    }
    .image {
      max-width: 80%;
      max-height: 80%;
    }
    .description {
      text-align: center;
      margin-top: -50px;
      .title {
        font-size: 2rem;
        padding: 0 1.5rem;
      }
      p {
        font-size: 1rem;
        padding: 1rem;
      }
      .hidden {
        visibility: hidden; /* 要素は非表示だが、スペースを確保 */
      }
    }
    
  }
</style>
